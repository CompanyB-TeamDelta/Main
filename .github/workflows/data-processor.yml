name: DEV - Deploy data-processor
env:
  AWS_REGION: us-east-1
  SERVICE: data-processor

on: 
  workflow_dispatch:
  push:
    branches: [ "lambda" ]
  pull_request:
    branches: [ "lambda" ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: checkout self
      uses: actions/checkout@v4

    - name: checkout terraform
      uses: actions/checkout@v4
      with:
        repository: CompanyB-TeamDelta/terraform
        path: terraform

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Build with Gradle
      working-directory: ./data-processor
      run: |
        ./gradlew build -x test

    - name: ls
      run: |
        ls -a
        cp data-processor/build/libs/data-processor-0.0.1-SNAPSHOT.jar ./terraform/data-processor/
        cd ./terraform/data-processor/
        ls -a
        
    - name: Build Docker image
      run: |
        cd ./terraform/data-processor/
        docker build --platform=linux/amd64 --no-cache -f Dockerfile -t data-processor .
        docker save data-processor > "data-processor.tar"
        ls -a

    - name: add secret
      run: |
        printf ${{ secrets.DATAPROCKEY }} >> key.pem
        ls -a
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform 
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform init
      id: init
      working-directory: terraform/${{ env.SERVICE }}
      run: terraform init

    - name: Terraform Format
      id: fmt
      working-directory: terraform/${{ env.SERVICE }}
      run: terraform fmt -diff

    # Run a terraform validate
    - name: Terraform Validate
      id: validate
      working-directory: terraform/${{ env.SERVICE }}
      # Run even if formatting fails
      if: success() || failure()
      run: terraform validate -no-color

    - name: Terraform apply
      id: apply
      working-directory: terraform/${{ env.SERVICE }}
      env:
        TF_LOG: DEBUG
      run: terraform apply -auto-approve -input=false
